<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>docker-demo</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <name>docker-demo</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Finchley.M9</spring-cloud.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>push-docker-image</id>

            <build>
                    <plugins>
                        <plugin>
                            <!-- Build an executable JAR -->
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jar-plugin</artifactId>
                            <version>3.0.2</version>
                        </plugin>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                        </plugin>
                        <plugin>
                            <groupId>io.fabric8</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>0.25.0</version>

                            <configuration>
                                <registry>registry.hub.docker.com/sudharsanthumatti</registry>

                                <authConfig>
                                    <username>YOUR_GIT_HUB_USERNAME</username>
                                    <password>YOUR_GIT_HUB_PASSWORD></password>
                                </authConfig>

                                <images>
                                    <image>
                                        <name>${project.artifactId}</name>
                                        <alias>${project.artifactId}</alias>

                                        <build>
                                            <assembly>
                                                <inline>
                                                    <dependencySets>
                                                        <dependencySet>
                                                            <useProjectArtifact>true</useProjectArtifact>
                                                            <includes>
                                                                <include>com.example:${project.artifactId}</include>
                                                            </includes>
                                                        </dependencySet>
                                                    </dependencySets>
                                                </inline>
                                                <targetDir>/opt/sudhar/docker</targetDir>
                                            </assembly>

                                            <from>openjdk:8u151-jre</from>
                                            <workdir>/opt/sudhar/docker</workdir>

                                            <healthCheck>
                                                <interval>20s</interval>
                                                <timeout>5s</timeout>
                                                <retries>6</retries>
                                                <cmd>curl -f http://localhost:8080/health || exit 1</cmd>
                                            </healthCheck>

                                            <entryPoint>
                                                <shell>ls -al /opt/sudhar/docker</shell>
                                                <shell>
                                                    java -server  \
                                                    -XX:+UnlockExperimentalVMOptions \
                                                    -XX:+UseCGroupMemoryLimitForHeap \
                                                    -XX:MaxRAMFraction=1 \
                                                    -XX:+HeapDumpOnOutOfMemoryError \
                                                    -XX:HeapDumpPath=/tmp \
                                                    -jar \
                                                    ${project.artifactId}-${project.version}.jar
                                                </shell>
                                            </entryPoint>
                                        </build>
                                        <run>
                                            <memory>5120000</memory>
                                            <ports>
                                                <port>172.17.0.2:8080:8080</port>
                                            </ports>
                                            <wait>
                                                <time>30000</time>
                                                <tcp>
                                                    <ports>
                                                        <port>8080</port>
                                                    </ports>
                                                </tcp>
                                            </wait>
                                        </run>
                                    </image>
                                </images>
                            </configuration>

                            <executions>
                                <execution>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>build</goal>
                                        <goal>start</goal>
                                        <goal>stop</goal>
                                        <goal>push</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
            </build>
        </profile>
    </profiles>
</project>
